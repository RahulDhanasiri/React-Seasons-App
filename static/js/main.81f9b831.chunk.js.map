{"version":3,"sources":["SeasonDisplay.js","Spinner.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","className","Spinner","message","defaultProps","App","state","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","this","renderContent","React","Component","ReactDOM","render","document","querySelector"],"mappings":"+LAGMA,G,MAAe,CACjBC,OAAQ,CACJC,KAAM,uBACNC,SAAU,OAEdC,OAAQ,CACJF,KAAM,qBACNC,SAAU,eA2BHE,EAbO,SAACC,GACnB,IAXeC,EAAKC,EAWdC,GAXSF,EAWUD,EAAMC,KAXXC,GAWgB,IAAIE,MAAOC,YAVnC,GAAKH,EAAO,EACbD,EAAM,EAAI,SAAW,SAIrBA,EAAM,EAAI,SAAW,UAIH,EAELP,EAAaS,GAA9BP,EAFsB,EAEtBA,KAAKC,EAFiB,EAEjBA,SAEZ,OACI,yBAAKS,UAAS,yBAAqBH,IAC/B,uBAAGG,UAAS,4BAAyBT,EAAzB,WACZ,4BAAKD,GACL,uBAAGU,UAAS,6BAA0BT,EAA1B,aC9BlBU,EAAU,SAACP,GACb,OACI,yBAAKM,UAAU,oBACX,yBAAKA,UAAU,sBAAsBN,EAAMQ,WAKvDD,EAAQE,aAAe,CACnBD,QAAS,cAGED,QCRTG,E,4MASFC,MAAQ,CAAEV,IAAK,KAAMW,aAAc,I,kEAEd,IAAD,OAChBC,OAAOC,UAAUC,YAAYC,oBACzB,SAAAC,GAAQ,OAAI,EAAKC,SAAS,CAAEjB,IAAKgB,EAASE,OAAOC,cACjD,SAAAC,GAAG,OAAI,EAAKH,SAAS,CAAEN,aAAcS,EAAIb,e,sCAK7C,OAAIc,KAAKX,MAAMC,eAAiBU,KAAKX,MAAMV,IAChC,uCAAaqB,KAAKX,MAAMC,aAAxB,MAGNU,KAAKX,MAAMC,cAAgBU,KAAKX,MAAMV,IACpC,kBAAC,EAAD,CAAeA,IAAKqB,KAAKX,MAAMV,MAG/B,kBAAC,EAAD,CAASO,QAAQ,yC,+BAKxB,OACI,yBAAKF,UAAW,cAAcgB,KAAKC,qB,GAjC7BC,IAAMC,WAuCxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W","file":"static/js/main.81f9b831.chunk.js","sourcesContent":["import './seasonDisplay.css';\r\nimport React from 'react';\r\n\r\nconst seasonConfig = {\r\n    summer: {\r\n        text: \"let's hit the beach!\",\r\n        iconName: 'sun'\r\n    },\r\n    winter: {\r\n        text: \"Burr, It's chilly!\",\r\n        iconName: 'snowflake'\r\n    }\r\n}\r\n\r\nconst getSeason = (lat, month) => {\r\n    if (month > 2 && month <9) {\r\n        return lat > 0 ? 'summer' : 'winter';\r\n    }\r\n\r\n    else {\r\n        return lat < 0 ? 'winter' : 'summer';\r\n    }\r\n}\r\n\r\nconst SeasonDisplay = (props) => {\r\n    const season = getSeason(props.lat, new Date().getMonth());\r\n    const {text,iconName} = seasonConfig[season];\r\n    \r\n    return (\r\n        <div className= {`season-display ${season}`}>\r\n            <i className = {`icon-left massive ${iconName} icon`} />\r\n            <h1>{text}</h1>\r\n            <i className = {`icon-right massive ${iconName} icon`} />\r\n        </div>  \r\n    );\r\n};\r\n\r\nexport default SeasonDisplay;","import React from 'react';\r\n\r\nconst Spinner = (props) => {\r\n    return (\r\n        <div className='ui active dimmer'>\r\n            <div className='ui big text loader'>{props.message}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nSpinner.defaultProps = {\r\n    message: 'Loading...'\r\n};\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SeasonDisplay from './SeasonDisplay'\r\nimport Spinner from './Spinner'\r\n\r\n\r\nclass App extends React.Component {\r\n    //constructor is JS object which is called first before any other function when an instance of a class is created.\r\n    /*constructor(props) {\r\n        super(props); //we have to call the function super and have to pass props because App component is boworring some           functionality from the base class React.Component. This base class has a constructor function of its own which helps in setting up a react component for us to utilize. (In other words super is a reference for the parent class' constructor)\r\n        \r\n        //This is the only time we do direct assignment to this.state object.\r\n        this.state = { lat: null, errorMessage: '' };\r\n    };*/\r\n\r\n    state = { lat: null, errorMessage: ''};\r\n\r\n    componentDidMount() {\r\n        window.navigator.geolocation.getCurrentPosition(\r\n            position => this.setState({ lat: position.coords.latitude }),//To update our state object we called setState\r\n            err => this.setState({ errorMessage: err.message})\r\n        );\r\n    };\r\n\r\n    renderContent() {\r\n        if (this.state.errorMessage && !this.state.lat) {\r\n            return <div>Error: {this.state.errorMessage} </div>;\r\n        }\r\n\r\n        if (!this.state.errorMessage && this.state.lat) {\r\n        return <SeasonDisplay lat={this.state.lat}  />;\r\n        }\r\n\r\n        return <Spinner message=\"Please accept the location request\" />\r\n    }\r\n\r\n    //render function is Required for React code. whereas constructor is based on the user and usecase.\r\n    render () {\r\n        return (\r\n            <div className= \"border red\">{this.renderContent()}</div>\r\n        )\r\n    };\r\n};\r\n\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}